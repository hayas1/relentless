name: Pull Request

on:
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  unit-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    - name: Cargo home
      id: cargo-home
      run: echo "path=${CARGO_HOME:-~/.cargo}" >>"$GITHUB_OUTPUT"
    - uses: actions/cache@v4
      with:
        path: |
          target
          ${{ steps.cargo-home.outputs.path }}
        key: cargo-${{ hashFiles('**/Cargo.toml') }}

    - run: cargo test --verbose --manifest-path examples/server/http/Cargo.toml
    - run: cargo fmt --check --manifest-path examples/server/http/Cargo.toml
    # - run: cargo clippy --tests --manifest-path examples/server/http/Cargo.toml -- --deny warnings

    - run: cargo test --verbose
    - run: cargo test --verbose --features=json --features=yaml
    - run: cargo test --verbose --features=json --features=yaml --features=cli
    - run: cargo fmt --check
    - run: RUSTDOCFLAGS="-D warnings" cargo doc --no-deps
    # - run: cargo clippy --tests -- --deny warnings

    - run: cargo install cargo-readme && cargo readme > README.md
    - run: git add -N . && git diff --exit-code -- README.md

  e2e-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    - name: Cargo home
      id: cargo-home
      run: echo "path=${CARGO_HOME:-~/.cargo}" >>"$GITHUB_OUTPUT"
    - uses: actions/cache@v4
      with:
        path: |
          target
          ${{ steps.cargo-home.outputs.path }}
        key: cargo-${{ hashFiles('**/Cargo.toml') }}

    - name: Run example http server (actual)
      uses: ./.github/actions/example-http-server
      with:
        port: 3001
        async: true
    - name: Run example http server (expect)
      uses: ./.github/actions/example-http-server
      with:
        port: 3000
        async: true
    - name: wait for server (actual) to start
      run: until (curl -i localhost:3001 | grep "200 OK") do sleep 5; done
    - name: wait for server (expect) to start
      run: until (curl -i localhost:3000 | grep "200 OK") do sleep 5; done

    - name: Run relentless test
      id: run-test
      run: |
        set -euo pipefail
        {
          echo 'outcome<<EOF'
          cargo run --features cli -- -f examples/config/*.yaml -d actual=http://localhost:3001 --no-color
          echo EOF
        } >> "$GITHUB_OUTPUT"
    - name: Comment on pull request
      # TODO
      if: always() && steps.run-test.outputs.outcome != ''
      run: |
        gh pr comment ${{ github.event.number }} --body ${{ steps.run-test.outputs.outcome }}


  version:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4
    - name: Check version in Cargo.toml and git tag
      uses: ./.github/actions/versions
      id: detect-version
    - name: Add label
      if: steps.detect-version.outputs.should-release == 'true'
      run: |
        gh pr edit ${{ github.event.pull_request.number }} --add-label "release"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
